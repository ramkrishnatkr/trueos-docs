#
msgid ""
msgstr ""
"Project-Id-Version: TrueOSÂ® User Guide\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-11-01 13:30-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../pico.rst:72
msgid "A microSD card for each thin client."
msgstr ""

#: ../../pico.rst:80
msgid "Each thin client will need:"
msgstr ""

#: ../../pico.rst:82
msgid ""
"HDMI monitor. Currently, 1920x1080 is the maximum supported resolution and "
"the monitor should have integrated speakers for audio to function properly."
msgstr ""

#: ../../pico.rst:85
msgid "Network cable."
msgstr ""

#: ../../pico.rst:127
msgid "SSH"
msgstr ""

#: ../../pico.rst:127
msgid "Video"
msgstr ""

#: ../../pico.rst:127
msgid "Audio"
msgstr ""

#: ../../pico.rst:129
msgid "cipher"
msgstr ""

#: ../../pico.rst:129
msgid "enablevgl=true"
msgstr ""

#: ../../pico.rst:129
msgid "enablesound=true"
msgstr ""

#: ../../pico.rst:131
msgid "compression=<1-9>"
msgstr ""

#: ../../pico.rst:145
msgid ""
"Turning on VGL may introduce security vulnerabilities on a network with "
"untrusted clients."
msgstr ""

#: ../../pico.rst:152
msgid ""
"Currently, audio only functions over the HDMI connection port on the "
"Raspberry Pi, meaning audio will only work on monitors with built-in audio "
"capabilities. Change **true** to **false** to disable all audio."
msgstr ""

#: ../../pico.rst:206
msgid "Insert the microSD card into the thin client."
msgstr ""

#: ../../pico.rst:209
msgid "Plug in the USB Mouse and Keyboard."
msgstr ""

#: ../../pico.rst:210
msgid "Attach the monitor's HDMI cable."
msgstr ""

#: ../../pico.rst:211
msgid ""
"Plug in the ARM device's power cable. This should always be the **last** "
"step."
msgstr ""

#: ../../pico.rst:227
msgid ""
"If the server uses the |lumina| Desktop Environment, hovering over the "
":guilabel:`Network Status Icon` in the System Tray displays the client's IP "
"address, the server's IP address, and the client's unique "
":command:`pico_auth` number, seen in :numref:`Image %s <piip>`. This is "
"intended to efficiently provide relevant network information for simplified "
"server administration."
msgstr ""

#: ../../pico.rst:251
msgid "VGL Graphics Acceleration"
msgstr ""

#: ../../pico.rst:280
msgid "Pulse Audio"
msgstr ""

#: ../../pico.rst:311
msgid "Command"
msgstr ""

#: ../../pico.rst:311
msgid "Description"
msgstr ""

#: ../../pico.rst:313
msgid "pico-server"
msgstr ""

#: ../../pico.rst:313
msgid ""
"Primary Pico command. All commands begin with :command:`pico-server` and a "
"space."
msgstr ""

#: ../../pico.rst:316
msgid "-list"
msgstr ""

#: ../../pico.rst:316
msgid ""
"Displays all connected clients, as either \"pico_auth <#>\" or the specific "
"logins (\"testuser_pico\")"
msgstr ""

#: ../../pico.rst:320
msgid "-kill pico_auth <#>"
msgstr ""

#: ../../pico.rst:320
msgid "Immediately reboots the specified client."
msgstr ""

#: ../../pico.rst:74
msgid ""
"Using a microSD card larger than 4 GB in size is largely unnecessary, as the"
" server stores almost all created data."
msgstr ""

#: ../../pico.rst:86
msgid "USB mouse."
msgstr ""

#: ../../pico.rst:87
msgid "USB keyboard."
msgstr ""

#: ../../pico.rst:134
msgid ""
"The :ref:`Configuration Settings <inisett>` Table will expand as more "
"options are developed and added to :file:`picoserver.ini`."
msgstr ""

#: ../../pico.rst:183
msgid "It may take a few moments for the system to decompress the file."
msgstr ""

#: ../../pico.rst:185
msgid ""
"Once the file is decompressed to a :file:`.img` file, insert a microSD card "
"into the system. An adapter might be necessary if the system has no microSD "
"card slots. As the superuser, use the :command:`dd` command line utility to "
"write the :file:`.img` file to the card:"
msgstr ""

#: ../../pico.rst:201
msgid "This command may take some time to process."
msgstr ""

#: ../../pico.rst:17
msgid "|trpi|"
msgstr ""

#: ../../pico.rst:23
msgid ""
"|trpi| is an initiative to connect multiple small ARM device thin clients to"
" a single |trueos| system. Similar to the |sysadm| project, |trpi| utilizes "
"two primary pieces of software: |pise| and |picl|."
msgstr ""

#: ../../pico.rst:27
msgid ""
"The goal for the |trpi| is to provide a low-cost solution for users who wish"
" to have a central server provide resources to multiple low-cost, low-power "
"systems. In effect, |trpi| allows one system to provide all the processing "
"power and graphical \"muscle\" for as many computers the user wishes to add "
"on the network. For example, three or four users can log into their thin "
"clients and open utilities, browse the Internet, or even play games while "
"one central server dynamically provides the needed resources for each of "
"these tasks."
msgstr ""

#: ../../pico.rst:40
msgid ""
"To download the |picl| software, visit the |trueos| `download page "
"<https://www.trueos.org/downloads>`_. A separate computer is required to "
"unpack and transfer the :file:`.img` file to a microSD card for insertion "
"into the thin client."
msgstr ""

#: ../../pico.rst:45
msgid ""
"Currently, the |trpi| software is functional for |trueos| and the Raspberry "
"Pi 2 model B v1.1. The bulk of development efforts are being directed toward"
" ensuring graphics and sound functionality. Future development goals include"
" supporting a wider variety of ARM devices and potential thin clients, and "
"building cross-platform support for the server software."
msgstr ""

#: ../../pico.rst:56
msgid "|trpi| Initialization"
msgstr ""

#: ../../pico.rst:58
msgid "To create a |trpi| network, several elements are required:"
msgstr ""

#: ../../pico.rst:60
msgid ""
"A |trueos| system with both an internet and local network connection to "
"download the necessary files and be used as the |pise|. For this system, it "
"is recommended to use strong hardware to provide the smoothest experience "
"for each connected client."
msgstr ""

#: ../../pico.rst:65
msgid ""
"For best performance, it is recommended to have wired network connections "
"from the |pise| to all connected clients."
msgstr ""

#: ../../pico.rst:68
msgid ""
"An ARM device to act as the thin client (as many as the user wants or the "
"server can support). Currently, only the Raspberry Pi 2 model B v1.1 is "
"supported, with up to five simultaneous connections on one |pise|."
msgstr ""

#: ../../pico.rst:77
msgid ""
"Adapter or connector for microSD cards to connect to the |pise| (Ex. a USB "
"to microSD card reader)."
msgstr ""

#: ../../pico.rst:88
msgid "Power adapter."
msgstr ""

#: ../../pico.rst:90
msgid ""
"Once all these components are assembled, it's time to configure the |pise|."
msgstr ""

#: ../../pico.rst:97
msgid "|pise|"
msgstr ""

#: ../../pico.rst:99
msgid ""
"Installing and configuring the |pise| is done via the command prompt, with "
"superuser permissions (:command:`su` or :command:`sudo <rest of command>`). "
"Open a terminal and download the |pise| package with :command:`sudo pkg "
"install picoserver` (also available in |appcafe|). Next, enable the |pise| "
"using :command:`sysrc -f /etc/rc.conf picoserver_enable=yes`. Finally, start"
" the |pise| with :command:`service picoserver start`."
msgstr ""

#: ../../pico.rst:107
msgid ""
"These commands will ensure the |pise| automatically starts and remains "
"active when the system is booted. Type :command:`picoserver onestart` to run"
" the server for the current session only."
msgstr ""

#: ../../pico.rst:112
msgid ""
"Once the |pise| starts, a new :file:`picoserver.ini` file is created on the "
"system, found in :file:`/usr/local/etc`. This :file:`.ini` file holds the "
"initialization settings for the |pise| and has three sections, seen in "
":numref:`Table %s <inisett>`:"
msgstr ""

#: ../../pico.rst:137
msgid ""
"Set the *compression* setting to any number from 1 to 9. The default setting"
" is recommended as turning up the compression can introduce performance "
"issues on the |picl|."
msgstr ""

#: ../../pico.rst:148
msgid ""
"If the server does not support video acceleration or to avoid any potential "
"security vulnerabilities on the Pico network, edit :file:`picoserver.ini` "
"and change :command:`enablevgl=` to **false**."
msgstr ""

#: ../../pico.rst:161
msgid ""
"After any necessary accounts are created, the next step is to initialize the"
" client."
msgstr ""

#: ../../pico.rst:168
msgid "Starting the |picl|"
msgstr ""

#: ../../pico.rst:170
msgid ""
"The process of initializing a |picl| begins on a separate |trueos| system. "
"On this system, navigate to the |trueos| website's `download page "
"<https://www.trueos.org/downloads>`_ and download the latest "
":file:`<pico>.img.xz` file. This file is compressed with **xz**; decompress "
"the file before burning it to a microSD card. Using the command line, "
"navigate to the file's location to use :command:`unxz` to unpack the file:"
msgstr ""

#: ../../pico.rst:190
msgid ""
"Be sure the :command:`dd if=` command points to the correct storage device. "
"In the example below, the microSD card is connected to a USB adapter, "
"identified as *da0* on the system."
msgstr ""

#: ../../pico.rst:203
msgid ""
"After the :file:`.img` file is written to the microSD card; connect the "
"|picl| to the |pise|:"
msgstr ""

#: ../../pico.rst:207
msgid ""
"Attach the network cable. Be sure the client is wired into the same network "
"as the |pise|."
msgstr ""

#: ../../pico.rst:214
msgid ""
"For the Raspberry Pi, inserting the power cable will generally turn on the "
"client device. The |picl| then searches for and connects to any |pise| on "
"the network, bringing the user to the |trueos| login screen. The |picl| is "
"now ready for use."
msgstr ""

#: ../../pico.rst:223
msgid "Using the |picl|"
msgstr ""

#: ../../pico.rst:225
msgid "There are a few differences in |trueos| when using a |picl|."
msgstr ""

#: ../../pico.rst:240
msgid ""
"When logging out with the |picl|, several processes begin. The client clears"
" the session, then restarts the discovery and connection processes. The "
"server will destroy the previous user's :file:`temp` file, along with the "
"previously assigned **pico_auth #**. These processes prepare the server for "
"a new connection and user login from the same |picl|."
msgstr ""

#: ../../pico.rst:264
msgid ""
"On a |picl|, test VGL functionality by opening the command line and typing "
":command:`/usr/local/VirtualGL/bin/vglrun glxgears`. A window will popup, "
"displaying several moving gears, as seen in :numref:`Image %s <vgltest>`. "
"The terminal also displays the framerate of the gears, and updates "
"periodically."
msgstr ""

#: ../../pico.rst:282
msgid ""
"`Pulse Audio <https://www.freedesktop.org/wiki/Software/PulseAudio>`_ is the"
" preferred audio solution for the |picl|. Pulse Audio allows a |picl| play "
"audio sent from the server. The Pulse Audio user `documentation "
"<https://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/>`_"
" provides a wealth of information on configuring Pulse Audio, including "
"streaming audio over the network. Advanced controls for Pulse Audio are "
"available in |appcafe| with the :command:`pavucontrol` multimedia "
"application."
msgstr ""

#: ../../pico.rst:295
msgid "|pise| Administration"
msgstr ""

#: ../../pico.rst:297
msgid ""
"Once the |pise| and thin clients are installed and ready to use, there are a"
" number of administrative commands available, seen in :numref:`Table %s "
"<picoadmin>`. Any new commands will be added to this table:"
msgstr ""

#: ../../pico.rst:36
msgid ""
"|pise| is available through :command:`pkg` and in |appcafe|. Configure the "
"server software before downloading the client software or initializing the "
"|picl|."
msgstr ""

#: ../../pico.rst:123
msgid "Pico Server Configuration Settings"
msgstr ""

#: ../../pico.rst:238
msgid "|picl| IP display"
msgstr ""

#: ../../pico.rst:274
msgid "VirtualGL Gears Test"
msgstr ""

#: ../../pico.rst:307
msgid "|pise| Administration Commands"
msgstr ""

#: ../../pico.rst:156
msgid ""
"Once satisfied with the settings in :file:`picoserver.ini`, new user "
"accounts/logins may need to be created for the client systems. See the "
":sysclbk:`User Manager <user-manager>` section of the |sysadm| handbook for "
"detailed instructions on creating new users on a |trueos| system."
msgstr ""

#: ../../pico.rst:19
msgid ""
"As a result of TrueOS using OpenRC and other changes, an update to these "
"instructions, especially server initialization, is forthcoming."
msgstr ""

#: ../../pico.rst:141
msgid ""
"Pico uses *Virtual GL* (VGL) for graphics hardware acceleration. VGL works "
"with any *OpenGL* supported graphics card, but Nvidia cards are generally "
"recommended at this time."
msgstr ""

#: ../../pico.rst:259
msgid ""
"VirtualGL also has an extensive `user guide "
"<https://www.virtualgl.org/Documentation/Documentation>`_ to help guide new "
"users through the various features of this useful toolkit."
msgstr ""

#: ../../pico.rst:253
msgid ""
"VirtualGL (VGL) is the toolkit used by the |trpi| to provide 3D hardware "
"acceleration to the |picl|. VGL redirects OpenGL commands and data to the "
"GPU in the |pise|, then pulls back the rendered 3D images to the client. For"
" further information about this open-source project, please refer to the "
"`VirtualGL website <https://virtualgl.org>`_"
msgstr ""

#~ msgid ""
#~ "VirtualGL (VGL) is the toolkit used by the |trpi| to provide 3D hardware "
#~ "acceleration to the |picl|. VGL redirects OpenGL commands and data to the "
#~ "GPU in the |pise|, then pulls back the rendered 3D images to the client. For"
#~ " further information about this open-source project, please refer to the "
#~ "`VirtualGL website <virtualgl.org>`_"
#~ msgstr ""

#~ msgid ""
#~ "Pico uses *Virtual GL* (vgl) for graphics hardware acceleration. VGL works "
#~ "with any *OpenGL* supported graphics card, but Nvidia cards are generally "
#~ "recommended at this time."
#~ msgstr ""

#~ msgid ""
#~ "VirtualGL also has an extensive `user guide "
#~ "<http://www.virtualgl.org/Documentation/Documentation>`_ to help guide new "
#~ "users through the various features of this useful toolkit."
#~ msgstr ""

#~ msgid ""
#~ "As a result to TrueOS using OpenRC, an update to these instructions, "
#~ "especially server initialization, is forthcoming."
#~ msgstr ""

#~ msgid ""
#~ "Once satisfied with the settings in :file:`picoserver.ini`, new user "
#~ "accounts/logins may need to be created for the client systems. See the `User"
#~ " Manager <https://sysadm.us/handbook/client/sysadmclient.html#user-"
#~ "manager>`_ section of the |sysadm| handbook for detailed instructions on "
#~ "creating new users on a |trueos| system."
#~ msgstr ""

#~ msgid ": VirtualGL Gears Test"
#~ msgstr ""

#~ msgid ": Pico Server Configuration Settings"
#~ msgstr ""

#~ msgid ": |picl| IP display"
#~ msgstr ""

#~ msgid ": |pise| Administration Commands"
#~ msgstr ""

#~ msgid ""
#~ "Once satisfied with the settings in :file:`picoserver.ini`, new user "
#~ "accounts/logins may need to be created for the client systems. See "
#~ ":ref:`User Manager` for detailed instructions on creating new users on a "
#~ "|trueos| system."
#~ msgstr ""

#~ msgid ""
#~ "**Audio:** Pulse Audio has an intermittent issue with freezing upon *client*"
#~ " initialization. A workaround has been implemented, but please refer to "
#~ ":ref:`Report a bug` if any additional audio issues are encountered."
#~ msgstr ""

#~ msgid "|trpi| Current Issues"
#~ msgstr ""

#~ msgid "This section lists the currently known bugs with |trpi| use:"
#~ msgstr ""

#~ msgid ""
#~ "|pise| is available both `online <https://www.trueos.org/downloads/>`_ and "
#~ "in |appcafe|. Configure the server software before downloading the client "
#~ "software or initializing the |picl|."
#~ msgstr ""

#~ msgid "|trueos| Pico"
#~ msgstr ""

#~ msgid "Pico Initialization"
#~ msgstr ""

#~ msgid "Pico Server"
#~ msgstr ""

#~ msgid ""
#~ "|trueos| Pico is an initiative to connect multiple small ARM device thin "
#~ "clients to a single |trueos| system. Similar to the |sysadm| project, Pico "
#~ "utilizes two primary pieces of software: Pico Server and Pico Client."
#~ msgstr ""

#~ msgid ""
#~ "The goal for the |trueos| Pico is to provide a low-cost solution for users "
#~ "who wish to have a central server provide resources to multiple low-cost, "
#~ "low-power systems. In effect, Pico allows one system to provide all the "
#~ "processing power and graphical \"muscle\" for as many computers the user "
#~ "wishes to add on the network. For example, three or four users can log into "
#~ "their thin clients and open utilities, browse the Internet, or even play "
#~ "games while one central server dynamically provides the needed resources for"
#~ " each of these tasks."
#~ msgstr ""

#~ msgid ""
#~ "For best performance, it is recommended to have wired network connections "
#~ "from the Pico server to all connected clients."
#~ msgstr ""

#~ msgid ""
#~ "An ARM device to act as the thin client (as many as the user wants or the "
#~ "server can support). Currently, only the Raspberry Pi 2 model B v1.1 is "
#~ "supported."
#~ msgstr ""

#~ msgid ""
#~ "Adapter or connector for microSD cards to connect to the Pico server (Ex. a "
#~ "USB to microSD card reader)."
#~ msgstr ""

#~ msgid ""
#~ "Once all these components are assembled, it's time to configure the Pico "
#~ "Server."
#~ msgstr ""

#~ msgid ""
#~ "If the server does not support video acceleration or you wish to avoid any "
#~ "security vulnerabilities on the Pico network, edit :file:`picoserver.ini` "
#~ "and change :command:`enablevgl=` to **false**."
#~ msgstr ""

#~ msgid ""
#~ "Once satisfied with the settings in :file:`picoserver.ini`, new user "
#~ "accounts/logins need to be created for the client systems. See :ref:`User "
#~ "Manager` for detailed instructions on creating new users on a |trueos| "
#~ "system."
#~ msgstr ""

#~ msgid "Starting the Pico Client"
#~ msgstr ""

#~ msgid ""
#~ "Attach the network cable. Be sure the client is wired into the same network "
#~ "as the Pico Server."
#~ msgstr ""

#~ msgid "Using the Pico Client"
#~ msgstr ""

#~ msgid "There are a few differences in |trueos| when using a Pico client."
#~ msgstr ""

#~ msgid ": Pico Client IP display"
#~ msgstr ""

#~ msgid ""
#~ "VirtualGL (VGL) is the toolkit used by the |trueos| Pico to provide 3D "
#~ "hardware acceleration to the Pico Clients. VGL redirects OpenGL commands and"
#~ " data to the GPU in the Pico Server, then pulls back the rendered 3D images "
#~ "to the client. For further information about this open-source project, "
#~ "please refer to the `VirtualGL website <virtualgl.org>`_"
#~ msgstr ""

#~ msgid ""
#~ "On a Pico client, test VGL functionality by opening the command line and "
#~ "typing :command:`/usr/local/VirtualGL/bin/vglrun glxgears`. A window will "
#~ "popup, displaying several moving gears, as seen in :numref:`Image %s "
#~ "<vgltest>`. The terminal will also display the framerate of the gears, "
#~ "updating periodically."
#~ msgstr ""

#~ msgid ""
#~ "`Pulse Audio <https://www.freedesktop.org/wiki/Software/PulseAudio>`_ is the"
#~ " preferred audio solution for Pico clients. Pulse Audio allows Pico clients "
#~ "play audio sent from the server. The Pulse Audio user `documentation "
#~ "<https://www.freedesktop.org/wiki/Software/PulseAudio/Documentation/User/>`_"
#~ " provides a wealth of information on configuring Pulse Audio, including "
#~ "streaming audio over the network. Advanced controls for Pulse Audio are "
#~ "available in |appcafe| with the :command:`pavucontrol` multimedia "
#~ "application."
#~ msgstr ""

#~ msgid "Pico Server Administration"
#~ msgstr ""

#~ msgid ": Pico Server Administration Commands"
#~ msgstr ""

#~ msgid "Pico Current Issues"
#~ msgstr ""

#~ msgid "This section lists the currently known bugs with Pico use:"
#~ msgstr ""

#~ msgid ""
#~ "Pico Server is available both `online <https://www.trueos.org/downloads/>`_ "
#~ "and in |appcafe|. Configure the server software before downloading the "
#~ "client software or initializing the Pico client device."
#~ msgstr ""

#~ msgid ""
#~ "To download the Pico Client, visit the |trueos| `download page "
#~ "<https://www.trueos.org/downloads>`_. A separate computer is required to "
#~ "unpack and transfer the :file:`.img` file to a microSD card for insertion "
#~ "into the thin client device."
#~ msgstr ""

#~ msgid ""
#~ "Currently, the Pico software is functional for |trueos| and the Raspberry Pi"
#~ " 2 model B v1.1. The bulk of development efforts are being directed toward "
#~ "ensuring graphics and sound functionality. Future development goals include "
#~ "supporting a wider variety of ARM Devices, and building cross-platform "
#~ "support for the server software."
#~ msgstr ""

#~ msgid "To create a Pico network, several elements are required:"
#~ msgstr ""

#~ msgid ""
#~ "A |trueos| system with both an internet and local network connection to "
#~ "download the necessary files and be used as the Pico server. For this "
#~ "system, it is recommended to use strong hardware to provide the smoothest "
#~ "experience for each connected client."
#~ msgstr ""

#~ msgid "Power adapter (for Raspberry Pi thin clients)."
#~ msgstr ""

#~ msgid ""
#~ "Installing and configuring the Pico server is done via the command prompt, "
#~ "with superuser permissions (:command:`su` or :command:`sudo <rest of "
#~ "command>`). Open a terminal and download the Pico Server package with "
#~ ":command:`sudo pkg install picoserver` (also available in |appcafe|). Next, "
#~ "enable the Pico server using :command:`sysrc -f /etc/rc.conf "
#~ "picoserver_enable=yes`. Finally, start the Pico server with "
#~ ":command:`service picoserver start`."
#~ msgstr ""

#~ msgid ""
#~ "Once the Pico server starts, a new :file:`picoserver.ini` file is created on"
#~ " the system, found in :file:`/usr/local/etc`. This :file:`.ini` file holds "
#~ "the initialization settings for the Pico server and has three sections, seen"
#~ " in :numref:`Table %s <inisett>`:"
#~ msgstr ""

#~ msgid ""
#~ "Set the *compression* setting to any number from 1 to 9. The default setting"
#~ " is recommended as turning up the compression can introduce performance "
#~ "issues on the clients."
#~ msgstr ""

#~ msgid ""
#~ "After any new accounts are created, the next step is to initialize the "
#~ "client."
#~ msgstr ""

#~ msgid ""
#~ "The process of initializing a Pico Client begins on a separate |trueos| "
#~ "system. On this system, navigate to the |trueos| website's `download page "
#~ "<https://www.trueos.org/downloads>`_ and download the latest "
#~ ":file:`<pico>.img.xz` file. This file is compressed with **xz**, decompress "
#~ "the file before burning it to a microSD card. Open a terminal and navigate "
#~ "to the file's location to use :command:`unxz` to unpack the file:"
#~ msgstr ""

#~ msgid ""
#~ "Be sure the :command:`dd if=` command points to right storage device if "
#~ "there are multiple storage devices inserted in the system. In the example "
#~ "above, the microSD card is connected to a USB adapter, identified as *da0* "
#~ "on the system."
#~ msgstr ""

#~ msgid ""
#~ "After the :file:`.img` file is written to the microSD card; connect the Pico"
#~ " client to the Pico server:"
#~ msgstr ""

#~ msgid ""
#~ "Inserting the power cable will generally turn on the client device. The Pico"
#~ " client then searches for and connects to any Pico Server on the network, "
#~ "bringing the user to the |trueos| login screen. The Pico client is now ready"
#~ " for use."
#~ msgstr ""

#~ msgid ""
#~ "When logging out with the Pico client, several processes begin. The client "
#~ "clears the session, then restarts the discovery and connection processes. "
#~ "The server will destroy the previous user's :file:`temp` file, along with "
#~ "the previously assigned **pico_auth #**. These processes prepare the server "
#~ "for a new connection and user login from the same Pico client."
#~ msgstr ""

#~ msgid ""
#~ "Once the Pico server and clients are installed and ready to use, there are a"
#~ " number of administrative commands available, seen in :numref:`Table %s "
#~ "<picoadmin>`. This table will expand as new commands are created:"
#~ msgstr ""

#~ msgid ""
#~ "Pico Server is available both `online <https://www.trueos.org/downloads/>`_ "
#~ "and in |appcafe|. The Server software will need to be configured before "
#~ "downloading the client software or initializing the Pico client device."
#~ msgstr ""

#~ msgid ""
#~ "Pico Client is available to download from the |trueos| `download page "
#~ "<https://www.trueos.org/downloads>`_. A separate computer will be required "
#~ "to unpack and transfer the :file:`.img` file to a microSD card for insertion"
#~ " into the thin client device."
#~ msgstr ""

#~ msgid ""
#~ "Currently, the Pico software is functional for |trueos| and the Raspberry Pi"
#~ " 2 model B v1.1. The bulk of development efforts are being directed toward "
#~ "ensuring graphics and sound functionality. Future development goals include "
#~ "supporting a wider variety of ARM Devices and building the server software "
#~ "to be cross-platform."
#~ msgstr ""

#~ msgid "To create a Pico network, several elements will be required:"
#~ msgstr ""

#~ msgid ""
#~ "A |trueos| system with both an internet and local network connection to "
#~ "download the necessary files and be used as the Pico server. It is "
#~ "recommended this system have strong hardware to provide the smoothest "
#~ "experience for each connected client."
#~ msgstr ""

#~ msgid ""
#~ "Using a microSD card larger than 4 GB in size is largely unnecessary, as the"
#~ " server will store almost all created data."
#~ msgstr ""

#~ msgid "USB Mouse."
#~ msgstr ""

#~ msgid "USB Keyboard."
#~ msgstr ""

#~ msgid "Power Adapter."
#~ msgstr ""

#~ msgid ""
#~ "Installing and configuring a Pico server is done via the command prompt, "
#~ "with superuser permissions (:command:`su` or :command:`sudo <rest of "
#~ "command>`). Begin opening a terminal and downloading the Pico Server package"
#~ " with :command:`sudo pkg install picoserver` (also available in |appcafe|). "
#~ "Next, enable the Pico server using :command:`sysrc -f /etc/rc.conf "
#~ "picoserver_enable=yes`. Finally, the Pico server is started with "
#~ ":command:`service picoserver start`."
#~ msgstr ""

#~ msgid ""
#~ "Once the Pico server is started, a new :file:`picoserver.ini` file will be "
#~ "created on the system, found in :file:`usr/local/etc`. This :file:`.ini` "
#~ "file holds the initialization settings for the Pico server and has three "
#~ "sections, seen in :numref:`Table %s <inisett>`. The table will expand as "
#~ "additional elements are added to :file:`picoserver.ini`."
#~ msgstr ""

#~ msgid ": Pico Server Initialization Settings"
#~ msgstr ""

#~ msgid ""
#~ "The *compression* setting can be any number from 1 to 9. The default setting"
#~ " is recommended as turning up the compression can introduce performance "
#~ "issues on the clients."
#~ msgstr ""

#~ msgid ""
#~ "Pico uses *Virtual GL* (vgl) for graphics hardware acceleration. VGL will "
#~ "work with any *OpenGL* supported graphics card, but Nvidia cards are "
#~ "generally recommended at this time."
#~ msgstr ""

#~ msgid ""
#~ "After any new accounts are created, it is time to initialize the client."
#~ msgstr ""

#~ msgid ""
#~ "The process of initializing a Pico Client begins on a separate |trueos| "
#~ "system. On this system, navigate to the |trueos| website's `download page "
#~ "<https://www.trueos.org/downloads>`_ and download the latest "
#~ ":file:`<pico>.img.xz` file. This file is compressed with **xz** and will "
#~ "need to be decompressed prior to burning the file to a microSD card. Open a "
#~ "terminal and navigate to the file's location to use :command:`unxz` to "
#~ "unpack the file:"
#~ msgstr ""

#~ msgid ""
#~ "Please be patient as it may take a few moments for the system to decompress "
#~ "the file."
#~ msgstr ""

#~ msgid ""
#~ "Once the file is decompressed to a :file:`.img` file, insert a microSD card "
#~ "into the system. An adapter may be necessary if the system has no microSD "
#~ "card slots. As the superuser, use the :command:`dd` command line utility to "
#~ "write the :file:`.img` file to the card:"
#~ msgstr ""

#~ msgid ""
#~ "Again, please be patient as this command may take some time to process."
#~ msgstr ""

#~ msgid ""
#~ "Be sure the :command:`dd if=` command points to right storage device if "
#~ "there are multiple storage devices inserted in the system. In the example "
#~ "above, the microSD card is connected to a USB adapter (da0) attached to the "
#~ "system."
#~ msgstr ""

#~ msgid ""
#~ "Now the :file:`.img` file is written to the microSD card; it is time to "
#~ "connect the Pico client to the Pico server:"
#~ msgstr ""

#~ msgid ""
#~ "Inserting the power cable will generally turn on the client device. The Pico"
#~ " client then searches for and connects to any Pico Server on the network, "
#~ "bringing the user to the |trueos| login screen. The Pico client should now "
#~ "be fully configured and ready to use."
#~ msgstr ""

#~ msgid ""
#~ "When logging out with the Pico client, several processes are begun. The "
#~ "client clears the session, then completely restarts the discovery and "
#~ "connection processes. The server will destroy the previous user's "
#~ ":file:`temp` file, along with the previously assigned **pico_auth #**. These"
#~ " processes prepare the server for a brand new connection and user login from"
#~ " the same Pico client."
#~ msgstr ""

#~ msgid ""
#~ "VirtualGL also has a fully featured `user guide "
#~ "<http://www.virtualgl.org/Documentation/Documentation>`_ to help guide new "
#~ "users through the various features of this useful toolkit."
#~ msgstr ""

#~ msgid ""
#~ "Once the Pico server and clients are installed and ready to use, there are a"
#~ " number of administrative commands available to use, seen in :numref:`Table "
#~ "%s <picoadmin>`. This table will expand as new commands are added:"
#~ msgstr ""

#~ msgid ""
#~ "**Audio:** Pulse Audio has a random issue with freezing upon *client* "
#~ "initialization. A workaround has been implemented, but please refer to "
#~ ":ref:`Report a bug` if any additional audio issues are encountered."
#~ msgstr ""

#~ msgid ""
#~ "**Audio:** Pulse Audio has a random issue with freezing upon *client* "
#~ "initialization. A bugfix is forthcoming."
#~ msgstr ""

#~ msgid ""
#~ "|trueos| Pico is an initiative to connect multiple Raspberry Pi thinclients "
#~ "to a single |trueos| system. Similar to the |sysadm| project, Pico utilizes "
#~ "two primary pieces of software: Pico Server and Pico Client."
#~ msgstr ""

#~ msgid ""
#~ "Pico Server is available both `online <https://www.trueos.org/downloads/>`_ "
#~ "and in the |appcafe|. Pico client is available to download from "
#~ "www.trueos.org. A computer will be required to unpack and transfer the "
#~ ":file:`.img` file to a microSD card for insertion into a Raspberry Pi."
#~ msgstr ""

#~ msgid "Currently, Pico software is Software -"
#~ msgstr ""

#~ msgid ""
#~ "pico server: software for a trueos system. (other os will be supported "
#~ "later)"
#~ msgstr ""

#~ msgid "install on the system to enable pico connectivity."
#~ msgstr ""

#~ msgid "pico client: downloads onto a microsd card to put into a raspberry pi."
#~ msgstr ""

#~ msgid ""
#~ "All software available to download from https://www.trueos.org/downloads/."
#~ msgstr ""

#~ msgid ""
#~ "|trueos| Pico is a thin client, pairing Raspberry Pi hardware with |trueos| "
#~ "on a server."
#~ msgstr ""

#~ msgid "On the server system, the"
#~ msgstr ""

#~ msgid "pkg install picoserver"
#~ msgstr ""

#~ msgid "sysrc -f /etc.rc.conf picoserver_enable=yes"
#~ msgstr ""

#~ msgid "service picoserver start"
#~ msgstr ""

#~ msgid ""
#~ "first start, :file:`picoserver.ini` will be created in "
#~ ":file:`usr/local/etc`."
#~ msgstr ""

#~ msgid ".ini file has three sections"
#~ msgstr ""

#~ msgid ""
#~ "ssh                         video             audio ---"
#~ "                         -----             ----- cipher"
#~ "                      enablevgl=true    enablesound=true compression 1-9 "
#~ "(default compression=2)"
#~ msgstr ""

#~ msgid "\"true\" and \"false\" are the default settings"
#~ msgstr ""

#~ msgid "video = vgl audio = pulseaudio"
#~ msgstr ""

#~ msgid "**server administration**"
#~ msgstr ""

#~ msgid "primary command: pico-server"
#~ msgstr ""

#~ msgid ""
#~ "shows whos connected (pico_auth <1-999999> or specific login {tim_pico})"
#~ msgstr ""

#~ msgid "-kill picoauth<#> terminate specified session"
#~ msgstr ""

#~ msgid "Pico Client"
#~ msgstr ""

#~ msgid "trueos.org download page (add link)"
#~ msgstr ""

#~ msgid "<filename here>.img.xz (.xz is compression)"
#~ msgstr ""

#~ msgid "With FreeBSD run \"unxz\" to decompress to .img file."
#~ msgstr ""

#~ msgid "\"dd\" to sd card with 1m block size. (same procedure as trueos usb image)"
#~ msgstr ""

#~ msgid "put SD card into PI"
#~ msgstr ""

#~ msgid ""
#~ "Raspberry Pi system must be connected to the same network as the server."
#~ msgstr ""

#~ msgid ""
#~ "Add :ref: link to creating new users in TrueOS handbook (personacrypt "
#~ "unnecessary)"
#~ msgstr ""

#~ msgid "**minimum requirements** (may need to be separate section with header)"
#~ msgstr ""

#~ msgid ""
#~ "2 GB SD card. Large SD cards generally unnecessary as most storage on server"
#~ " system."
#~ msgstr ""

#~ msgid ""
#~ "Server can dedicate resources to each pi on network, (very fluid depending "
#~ "on usage)"
#~ msgstr ""

#~ msgid "LAN only (wired recommended)"
#~ msgstr ""

#~ msgid "**Testing VGL** (separate section?)"
#~ msgstr ""

#~ msgid ""
#~ "virtual gl (vgl) enables hardware acceleration. It works on any opengl "
#~ "supported card, but NVidia cards are generally recommended."
#~ msgstr ""

#~ msgid ""
#~ "If card doesn't support video acceleration edit the .ini file and set "
#~ "vgl=false."
#~ msgstr ""

#~ msgid ""
#~ "Turning on vgl may introduce security vulnerabilities on a network with "
#~ "untrusted clients."
#~ msgstr ""

#~ msgid ""
#~ "test vgl procedure: log in, cd usr/local/vgl/bin, :command:`./ vglrun "
#~ "glxgears`"
#~ msgstr ""

#~ msgid "**Lumina Toolbar**"
#~ msgstr ""

#~ msgid ""
#~ "System tray network status icon will display pico ip + server ip + pico auth"
#~ " #"
#~ msgstr ""

#~ msgid "**Logout**"
#~ msgstr ""

#~ msgid ""
#~ "Pico clears session, restarts discovery and connection process completely "
#~ "fresh. Previous users temp file is destroyed, along with the unique "
#~ "pico_auth #."
#~ msgstr ""

#~ msgid "pico-server: usage"
#~ msgstr ""

#~ msgid "Pico Configuration"
#~ msgstr ""
